---
- name: Setup LXC Container with Docker
  hosts: all # This playbook assumes you're targeting the LXC container
             # Ensure your Ansible inventory has the LXC container's IP/hostname
             # and appropriate SSH credentials configured.
  become: true # Run all tasks with sudo privileges

  tasks:
    - name: Ensure apt cache is updated and all packages are upgraded
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        autoclean: yes
        autoremove: yes

    - name: Remove any old conflicting Docker packages
      ansible.builtin.apt:
        name: "{{ item }}"
        state: absent
        autoremove: yes
      loop:
        - docker.io
        - docker-doc
        - docker-compose
        - podman-docker
        - containerd
        - runc
      ignore_errors: true # Ignore errors if a package is not found, as it might not be installed

    - name: Install prerequisite packages for Docker
      ansible.builtin.apt:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release # Needed for lsb_release -cs
        state: present
        update_cache: yes

    - name: Create Docker keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Docker GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644' # Set read permissions for all

    - name: Add Docker APT repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian bookworm stable"
        state: present
        filename: docker

    - name: Install Docker Engine and CLI tools
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

    - name: Add current user to docker group
      # This task assumes the user you're connecting with via SSH
      # is the one you want to add to the docker group.
      # If you used cloud-init to create a different user (e.g., 'ubuntu'),
      # you might need to specify `user: ubuntu` or pass it as a variable.
      ansible.builtin.user:
        name: "{{ ansible_user }}" # Or specify a different user like 'ubuntu'
        groups: docker
        append: yes

    - name: Reboot the system
      ansible.builtin.reboot:
        reboot_timeout: 600 # Wait up to 10 minutes for the host to come back online

    - name: Run a specified Docker container
      community.docker.docker_container:
        name: "juice-shop" # Define this variable in your playbook or inventory
        image: "bkimminich/juice-shop"
        ports: 3000:3000
        state: started
        restart_policy: always